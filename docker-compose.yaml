version: '3.7'

services:
  mysql-master:
    container_name: $FIRST_DB_NAME
    image: mysql:latest
    restart: unless-stopped
    volumes:
      - '/var/lib/mysql/master:/var/lib/mysql'
      - './hosts/server1.cnf:/etc/mysql/conf.d/mysql.cnf'
    command: bash -c "chmod 644 /etc/mysql/conf.d/mysql.cnf && docker-entrypoint.sh mysqld"
    environment:
      TZ: "Asia/jakarta"
      MYSQL_ROOT_PASSWORD: $FIRST_ROOT_PASSWORD
    ports:
      - "3306:3306"
    networks:
      - db-replication

  mysql-second:
    container_name: $SECOND_DB_NAME
    image: mysql:latest
    restart: unless-stopped
    volumes:
      - '/var/lib/mysql/second:/var/lib/mysql'
      - './hosts/server2.cnf:/etc/mysql/conf.d/mysql.cnf'
    command: bash -c "chmod 644 /etc/mysql/conf.d/mysql.cnf && docker-entrypoint.sh mysqld"
    environment:
      TZ: "Asia/jakarta"
      MYSQL_ROOT_PASSWORD: $SECOND_ROOT_PASSWORD
    ports:
      - "3307:3307"
    networks:
      - db-replication
  
  pma:
    depends_on:
      - mysql-master
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8000:80"
    environment:
      - TZ=Asia/Jakarta
      - PMA_HOST=mysql-master
      - UPLOAD_LIMIT=2G
      - MEMORY_LIMIT=500M
      - MAX_EXECUTION_TIME=1000
    networks:
      - db-replication
      
  mysql-cron-backup:
    depends_on:
      - mysql-master
    image: fradelg/mysql-cron-backup
    container_name: mysql-cron-backup
    restart: unless-stopped    
    volumes:
      - /var/lib/mysql/backup:/backup
    environment:
      - TZ=Asia/Jakarta
      - MYSQL_HOST=mysql-master
      - MYSQL_USER=root
      - MYSQL_PASS=${FIRST_ROOT_PASSWORD}
      - MAX_BACKUPS=4
      - INIT_BACKUP=0
      - CRON_TIME=0 */6 * * *
    networks:
      - db-replication

  proxysql:
    image: proxysql/proxysql
    depends_on:
      - mysql-master
      - mysql-second
    ports:
      - 6032:6032
      - 6033:6033
    restart: unless-stopped
    volumes:
      - ./proxysql.cnf:/etc/proxysql.cnf
    networks:
      - db-replication

networks:
  db-replication:
    name: db-replication
    driver: bridge
